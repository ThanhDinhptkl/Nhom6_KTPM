version: '3.8'

services:
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis service for caching and session management
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  tour-service:
    build:
      context: ./TourService
      dockerfile: Dockerfile
    image: tour-service:latest
    ports:
      - "8081:8081"
    depends_on:
      discovery-server:
        condition: service_healthy
      tour-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://tour-db:3306/tour_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=8081
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  tour-db:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=tour_db
    volumes:
      - tour-mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  customer-service:
    build:
      context: ./CustomerService
      dockerfile: Dockerfile
    ports:
      - "8082:8082" 
    depends_on:
      discovery-server:
        condition: service_healthy
      customer-db:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://customer-db:3306/customer_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  customer-db:
    image: mysql:8.0
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=customer_db
    volumes:
      - customer-mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  booking-service:
    build:
      context: ./BookingService
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      discovery-server:
        condition: service_healthy
      booking-db:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://booking-db:3306/booking_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  booking-db:
    image: mysql:8.0
    ports:
      - "3309:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=booking_db
    volumes:
      - booking-mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  payment-service:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      discovery-server:
        condition: service_healthy
      payment-db:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://payment-db:3306/payment_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  payment-db:
    image: mysql:8.0
    ports:
      - "3310:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=payment_db
    volumes:
      - payment-mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge

volumes:
  tour-mysql-data:
  customer-mysql-data:
  booking-mysql-data:
  payment-mysql-data:
  redis-data: